apiVersion: apps/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: invoicing
    app: invoicing
    version: "1.0"
    visualize: "true"        
  name: invoicing
spec:
  replicas: 1
  selector:
    matchLabels:
      run: invoicing
      app: invoicing
      version: "1.0"
      serving: "true"    
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: invoicing
        app: invoicing
        version: "1.0"
        serving: "true"    
        visualize: "true"                
    spec:
      containers:
      - name: invoicing
        image: microservice-istio-invoicing:1
        imagePullPolicy: Never
#        livenessProbe:
#          initialDelaySeconds: 180
#          httpGet:
#            path: /actuator/health
#            port: 8080
#        readinessProbe:
#          httpGet:
#            path: /
#            port: 8080
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: shipping
    app: shipping
    version: "1.0"
    visualize: "true"        
  name: shipping
spec:
  replicas: 1
  selector:
    matchLabels:
      run: shipping
      app: shipping
      version: "1.0"
      serving: "true"    
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: shipping
        app: shipping
        version: "1.0"
        serving: "true"    
        visualize: "true"                
    spec:
      containers:
      - name: shipping
        image: microservice-istio-shipping:1
        imagePullPolicy: Never        
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: order
    app: order    
    version: "1.0"
    visualize: "true"
  name: order
spec:
  replicas: 1
  selector:
    matchLabels:
      run: order
      app: order
      version: "1.0"
      serving: "true"    
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: order
        app: order
        version: "1.0"
        serving: "true"    
        visualize: "true"                
    spec:
      containers:
      - name: order
        image: microservice-istio-order:1
        imagePullPolicy: Never        
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: invoicing
    visualize: "true"
  name: invoicing
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: http    
  selector:
    run: invoicing
    serving: "true"    
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: shipping
    visualize: "true"
  name: shipping
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: http    
  selector:
    run: shipping
    serving: "true"    
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: order
    visualize: "true"
  name: order
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: http    
  selector:
    run: order
    serving: "true"    
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: shipping
spec:
  hosts:
  - "*"
  gateways:
  - microservice-gateway
  http:
  - match:
    - uri:
        prefix: /shipping
    rewrite:
      uri: /
    route:
    - destination:
        port:
          number: 8080
        host: shipping.default.svc.cluster.local

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: invoicing
spec:
  hosts:
  - "*"
  gateways:
  - microservice-gateway
  http:
  - match:
    - uri:
        prefix: /invoicing
    rewrite:
      uri: /
    route:
    - destination:
        port:
          number: 8080
        host: invoicing.default.svc.cluster.local

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: order
spec:
  hosts:
  - "*"
  gateways:
  - microservice-gateway
  http:
  - match:
    - uri:
        prefix: /order
    rewrite:
      uri: /
    route:
    - destination:
        port:
          number: 8080
        host: order.default.svc.cluster.local
